openapi: 3.0.3
info:
  title: Express MVC Boilerplate API
  version: 1.0.0
  description: API documentation for authentication and role management
servers:
  - url: http://localhost:3000/api
paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, password]
              properties:
                username:
                  type: string
                password:
                  type: string
                role:
                  type: string
      responses:
        '201':
          description: User registered
        '400':
          description: Bad request
  /auth/login:
    post:
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, password]
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '401':
          description: Unauthorized
  /auth/refresh-token:
    post:
      summary: Refresh JWT access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [refreshToken]
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Token refreshed
        '401':
          description: Unauthorized
  /auth/me:
    get:
      summary: Get current user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile
        '401':
          description: Unauthorized
  /roles:
    get:
      summary: List roles
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Search query
        - in: query
          name: page
          schema:
            type: integer
          description: Page number
        - in: query
          name: offset
          schema:
            type: integer
          description: Page size
      responses:
        '200':
          description: List of roles
    post:
      summary: Create a new role
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Role created
        '400':
          description: Bad request
  /roles/{id}:
    get:
      summary: Get role by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Role found
        '404':
          description: Not found
    put:
      summary: Update role by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Role updated
        '400':
          description: Bad request
    delete:
      summary: Delete role by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Role deleted
        '400':
          description: Bad request
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
